syntax = "proto3";

package medallion;

option go_package = "github.com/medallion-ai/medallion/proto";

// MedallionService defines the gRPC service for Medallion
service MedallionService {
  // ExecuteWorkflow executes a workflow remotely
  rpc ExecuteWorkflow(ExecuteWorkflowRequest) returns (ExecuteWorkflowResponse);
  
  // GetRunStatus gets the status of a workflow run
  rpc GetRunStatus(GetRunStatusRequest) returns (GetRunStatusResponse);
  
  // QueryKnowledgeGraph queries the knowledge graph
  rpc QueryKnowledgeGraph(QueryRequest) returns (QueryResponse);
  
  // CreateAgent creates a new agent
  rpc CreateAgent(CreateAgentRequest) returns (CreateAgentResponse);
  
  // ListAgents lists all agents
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse);
}

// ExecuteWorkflowRequest represents a request to execute a workflow
message ExecuteWorkflowRequest {
  string workflow_name = 1;
  map<string, string> variables = 2;
  string config_file = 3;
}

// ExecuteWorkflowResponse represents the response from workflow execution
message ExecuteWorkflowResponse {
  string run_id = 1;
  string status = 2;
  string message = 3;
}

// GetRunStatusRequest represents a request to get run status
message GetRunStatusRequest {
  string run_id = 1;
}

// GetRunStatusResponse represents the response with run status
message GetRunStatusResponse {
  string run_id = 1;
  string status = 2;
  string output = 3;
  string error = 4;
  int64 duration_ms = 5;
}

// QueryRequest represents a knowledge graph query request
message QueryRequest {
  string query = 1;
  string format = 2;
}

// QueryResponse represents the response from a knowledge graph query
message QueryResponse {
  string result = 1;
  string format = 2;
}

// CreateAgentRequest represents a request to create an agent
message CreateAgentRequest {
  string name = 1;
  string type = 2;
  string description = 3;
  string model_provider = 4;
  string model_name = 5;
  string system_prompt = 6;
}

// CreateAgentResponse represents the response from agent creation
message CreateAgentResponse {
  string agent_id = 1;
  string message = 2;
}

// ListAgentsRequest represents a request to list agents
message ListAgentsRequest {
  int32 limit = 1;
  int32 offset = 2;
}

// ListAgentsResponse represents the response with agent list
message ListAgentsResponse {
  repeated Agent agents = 1;
  int32 total = 2;
}

// Agent represents an AI agent
message Agent {
  string id = 1;
  string name = 2;
  string type = 3;
  string description = 4;
  string model_provider = 5;
  string model_name = 6;
  string system_prompt = 7;
  int64 created_at = 8;
  int64 updated_at = 9;
}
